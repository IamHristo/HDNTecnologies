# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages with Send Email

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.office365.com  # Replace with your SMTP server
          server_port: 587  # Replace with your SMTP server port
          username: ${{ secrets.SMTP_USERNAME }}  # Set this secret in your GitHub repository
          password: ${{ secrets.SMTP_PASSWORD }}  # Set this secret in your GitHub repository
          subject: Github Actions job result
          body: |
            The deployment for repository ${{ github.repository }} has ${{ job.status }}.
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
            - Workflow: ${{ github.workflow }}
            - Job: ${{ github.job }}
            - Action: ${{ github.action }}
            - Page URL: ${{ steps.deployment.outputs.page_url }}
          from: 'noreply@example.com'  # Replace with your sender email
          to: 'recipient@example.com'  # Replace with the recipient email
